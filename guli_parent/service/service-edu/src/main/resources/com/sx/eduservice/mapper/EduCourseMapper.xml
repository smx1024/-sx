<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sx.eduservice.mapper.EduCourseMapper">

    <resultMap type="com.sx.eduservice.entity.EduCourse" id="EduCourseMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="teacherId" column="teacher_id" jdbcType="VARCHAR"/>
        <result property="subjectId" column="subject_id" jdbcType="VARCHAR"/>
        <result property="subjectParentId" column="subject_parent_id" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="VARCHAR"/>
        <result property="lessonNum" column="lesson_num" jdbcType="VARCHAR"/>
        <result property="cover" column="cover" jdbcType="VARCHAR"/>
        <result property="buyCount" column="buy_count" jdbcType="VARCHAR"/>
        <result property="viewCount" column="view_count" jdbcType="VARCHAR"/>
        <result property="version" column="version" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
        <result property="gmtCreate" column="gmt_create" jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into guliedu.edu_course(teacher_id, subject_id, subject_parent_id, title, price, lesson_num, cover,
        buy_count, view_count, version, status, is_deleted, gmt_create, gmt_modified)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.teacherId}, #{entity.subjectId}, #{entity.subjectParentId}, #{entity.title}, #{entity.price},
            #{entity.lessonNum}, #{entity.cover}, #{entity.buyCount}, #{entity.viewCount}, #{entity.version},
            #{entity.status}, #{entity.isDeleted}, #{entity.gmtCreate}, #{entity.gmtModified})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into guliedu.edu_course(teacher_id, subject_id, subject_parent_id, title, price, lesson_num, cover,
        buy_count, view_count, version, status, is_deleted, gmt_create, gmt_modified)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.teacherId}, #{entity.subjectId}, #{entity.subjectParentId}, #{entity.title}, #{entity.price},
            #{entity.lessonNum}, #{entity.cover}, #{entity.buyCount}, #{entity.viewCount}, #{entity.version},
            #{entity.status}, #{entity.isDeleted}, #{entity.gmtCreate}, #{entity.gmtModified})
        </foreach>
        on duplicate key update
        teacher_id = values(teacher_id) , subject_id = values(subject_id) , subject_parent_id =
        values(subject_parent_id) , title = values(title) , price = values(price) , lesson_num = values(lesson_num) ,
        cover = values(cover) , buy_count = values(buy_count) , view_count = values(view_count) , version =
        values(version) , status = values(status) , is_deleted = values(is_deleted) , gmt_create = values(gmt_create) ,
        gmt_modified = values(gmt_modified)
    </insert>
    <select id="getPublishCourseInfo" resultType="com.sx.eduservice.entity.vo.CoursePublishVo">
        SELECT ec.id,
               ec.title,
               ec.cover,
               ec.lesson_num AS lessonNum,
               ec.price,
               s1.title      AS subjectLevelOne,
               s2.title      AS subjectLevelTwo,
               t.name        AS teacherName
        FROM edu_course ec
                 LEFT JOIN edu_teacher t ON ec.id = t.id
                 LEFT JOIN edu_subject s1 ON ec.subject_parent_id = s1.id
                 LEFT JOIN edu_subject s2 ON ec.id = s2.id
        WHERE ec.id = #{id}
    </select>
    <select id="getBaseCourseInfo" resultType="com.sx.eduservice.entity.vo.CourseWebVo">
        SELECT ec.id,
               ec.title,
               ec.cover,
               ec.lesson_num AS lessonNum,
               ec.price,
               ec.cover,
               ec.buy_count  as buyCount,
               ec.view_count as viewCount,
               esd.description,
               s1.title      AS subjectLevelOne,
               s1.id         as subjectLevelOneId,
               s2.id         as subjectLevelTwoId,
               s2.title      AS subjectLevelTwo,
               t.name        AS teacherName,
               t.id          as teacherId,
               t.avatar,
               t.intro
        FROM edu_course ec
                 LEFT JOIN edu_teacher t ON ec.teacher_id = t.id
                 LEFT JOIN edu_subject s1 ON ec.subject_parent_id = s1.id
                 LEFT JOIN edu_subject s2 ON ec.id = s2.id
                 left join edu_course_description esd on ec.id = esd.id
        WHERE ec.id = #{id}
    </select>

</mapper>

